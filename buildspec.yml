version: 0.2

env:
  variables:
    REPOSITORY_NAME: "cicdpipeline"
    CONTAINER_NAME: "MyContainer"

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com || true
      - rm -rf /etc/apt/source.list.d/sbt.list || true
      - apt-get update -y
      - pip install --upgrade pip
      - pip install awscli

  pre_build:
    commands:
      - echo "Entering pre_build phase..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="us-east-1"
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "ECR URI: $REPOSITORY_URI"
      - echo "Tag: $IMAGE_TAG"
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo "Entering build phase..."
      - docker build --build-arg ENV=prod -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Entering post_build phase..."
      - echo "Pushing Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG

      - echo "Creating imagedefinitions.json for ECS deployment..."
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json

      - echo "Writing appspec.yaml..."
      - |
        cat <<EOF > appspec.yaml
        version: 1
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: "InfraStackMyTaskDef93E1369E"
                LoadBalancerInfo:
                  ContainerName: "$CONTAINER_NAME"
                  ContainerPort: 80
        EOF

artifacts:
  files:
    - appspec.yaml
    - imagedefinitions.json
