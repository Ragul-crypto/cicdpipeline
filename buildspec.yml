
version: 0.2
env:
  variables:
    REPOSITORY_NAME: test
phases:
  install:
    runtime-version:
      python: 3.9
    commands:
      - echo "Installing dependencies and running tests..."
      - echo Logging in to Amazon ECR...
      - apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com
      - rm -rf /etc/apt/source.list.d/sbt.list
      - apt-get update -y
      - python --version
      - pip install --upgrade pip
      - pip install awscli --upgrade
      - echo "Getting AWS account ID and region..."
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo "Getting AWS account ID and region..."
      - REPOSITORY_URI=535002855046.dkr.ecr.us-east-1.amazonaws.com/cicdpipeline
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "ECR URI:$REPOSITORY_URI"
      - echo "Tag:$IMAGE_TAG"
      - echo "Logging into ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username
        AWS --password-stdin $REPOSITORY_URI
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on date
      - docker build -t $REPOSITORY_URI:latest .
      - docker build --build-arg ENV=prod -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on date
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Creating imagedefinitions.json for ECS (optional)..."
      - echo "[{\"name\":\"MyContainer\",\"imageUri\":\"$REPOSITORY_URI:$IMAGE_TAG\"}]" > imagedefinitions.json
      - echo Writing appspec.yaml...
      - |
        cat <<EOF > appspec.yaml
        version: 1
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: "InfraStackMyTaskDef93E1369E"
                LoadBalancerInfo:
                  ContainerName: "MyContainer"
                  ContainerPort: 80
        EOF
artifacts:
  files:
    - appspec.yaml
    - imagedefinitions.json
